<?php

/**
 * @file
 * Install/update code for the Paragraphs Aplenty module.
 */

/**
 * Helper function to create a paragraphs bundle (type).
 *
 * @param string $machine
 *   The machine name for the bundle.
 * @param string $human
 *   The human label for the bundle.
 */
function _uswds_paragraphs_create_bundle($machine, $human) {
  $existing = paragraphs_bundle_load($machine);
  if ($existing) {
    return;
  }

  $bundle = new stdClass();
  $bundle->name = $human;
  $bundle->label = $human;
  $bundle->description = '';
  $bundle->bundle = $machine;
  $bundle->allow_unpublish = 1;
  $bundle->locked = 0;
  $bundle->allow_unpublish = 1;
  paragraphs_bundle_save($bundle);
}

/**
 * Implements hook_install().
 */
function uswds_paragraphs_install() {

  // Install the Hero paragraph type.
  $bundle = 'uswds_hero';
  _uswds_paragraphs_create_bundle($bundle, 'Hero');
  _uswds_paragraphs_add_image_field('field_uswds_image', $bundle, array(
    'label' => 'Hero background image',
    'description' => 'If provided, this image will appear as the background for the hero.',
    'settings' => array(
      'min_dimensions' => '1200x300',
      'max_dimensions' => '3600x600',
    ),
  ));
  _uswds_paragraphs_add_text_field('field_uswds_title', $bundle, array(
    'label' => 'Hero callout title',
    'description' => 'If provided, this title will appear at the top of the hero callout.',
  ));
  _uswds_paragraphs_add_text_long_field('field_uswds_body', $bundle, array(
    'label' => 'Description',
    'required' => FALSE,
  ));
  _uswds_paragraphs_add_link_field('field_uswds_button', $bundle, array(
    'label' => 'Hero callout button',
    'description' => 'If provided, this link will appear at the bottom of the hero callout, as a button.',
  ));

  // Install the Text paragraph type.
  $bundle = 'uswds_text';
  _uswds_paragraphs_create_bundle($bundle, 'Text');
  _uswds_paragraphs_add_text_long_field('field_uswds_body', $bundle, array(
    'label' => 'Text',
    'required' => TRUE,
  ));

  // Install the Image Block paragraph type.
  $bundle = 'uswds_media_block';
  _uswds_paragraphs_create_bundle($bundle, 'Media block');
  _uswds_paragraphs_add_text_field('field_uswds_title', $bundle, array(
    'label' => 'Media block title',
    'required' => TRUE,
  ));
  _uswds_paragraphs_add_image_field('field_uswds_image', $bundle, array(
    'label' => 'Media block image',
    'required' => TRUE,
  ));
  _uswds_paragraphs_add_text_long_field('field_uswds_body', $bundle, array(
    'label' => 'Media block body',
    'required' => TRUE,
  ));

  // Install the Graphic List paragraph type.
  $bundle = 'uswds_graphic_list';
  _uswds_paragraphs_create_bundle($bundle, 'Graphic list');
  _uswds_paragraphs_add_paragraphs_field('field_uswds_paragraphs', $bundle, array(
    'label' => 'Media blocks',
    'settings' => array(
      'allowed_bundles' => array(
        'uswds_media_block' => 'uswds_media_block',
      ),
      'title' => 'Media block',
      'title_multiple' => 'Media blocks',
    ),
    'required' => TRUE,
  ));

  // Install the Column paragraph type.
  $bundle = 'uswds_column';
  _uswds_paragraphs_create_bundle($bundle, 'Column');
  _uswds_paragraphs_add_text_long_field('field_uswds_body', $bundle, array(
    'label' => 'Text',
  ));

  // Install the Grid (aka "Row of columns") paragraph type.
  $bundle = 'uswds_grid';
  _uswds_paragraphs_create_bundle($bundle, 'Row of columns');
  _uswds_paragraphs_add_number_list_field('field_uswds_grid_column_width', $bundle,
    array(
      'label' => 'Column width',
      'description' => 'This sets the width of the columns in this row, and the number of columns per row.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 3),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          2 => '½ width (2 columns)',
          3 => '⅓ width (3 columns)',
          4 => '¼ width (4 columns)',
          6 => '⅙ width (6 columns)',
        ),
      ),
    )
  );
  _uswds_paragraphs_add_number_list_field('field_uswds_grid_column_stretch', $bundle,
    array(
      'label' => 'Column to stretch',
      'description' => 'Choose which column will stretch to fill the remainder. If the number of paragraphs is less than the set number of columns, then the column chosen here will stretch to fill the remainder.',
      'default_value' => array(
        array('value' => 1),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          1 => 'First column',
          2 => 'Second column',
          3 => 'Third column',
          4 => 'Fourth column',
          5 => 'Fifth column',
        ),
      ),
    )
  );
  _uswds_paragraphs_add_paragraphs_field('field_uswds_paragraphs', $bundle, array(
    'label' => 'Columns',
    'settings' => array(
      'allowed_bundles' => array(
        'uswds_column' => 'uswds_column',
      ),
      'title' => 'Column',
      'title_multiple' => 'Columns',
    ),
    'required' => TRUE,
  ));

  // Install the Accordion Item paragraph type.
  $bundle = 'uswds_accordion_item';
  _uswds_paragraphs_create_bundle($bundle, 'Accordion Item');
  _uswds_paragraphs_add_text_field('field_uswds_title', $bundle, array(
    'label' => 'Accordion item title',
    'required' => TRUE,
  ));
  _uswds_paragraphs_add_text_long_field('field_uswds_body', $bundle, array(
    'label' => 'Accordion item content',
  ));

  // Install the Accordion paragraph type.
  $bundle = 'uswds_accordion';
  _uswds_paragraphs_create_bundle($bundle, 'Accordion');
  _uswds_paragraphs_add_boolean_field('field_uswds_accordion_bordered', $bundle, array(
    'label' => 'Add border around items',
  ));
  _uswds_paragraphs_add_boolean_field('field_uswds_accordion_multi', $bundle, array(
    'label' => 'Allow more than one item to expand at a time',
  ));
  _uswds_paragraphs_add_boolean_field('field_uswds_accordion_closed', $bundle, array(
    'label' => 'Start closed',
  ));
  _uswds_paragraphs_add_paragraphs_field('field_uswds_paragraphs', $bundle, array(
    'label' => 'Accordion Items',
    'settings' => array(
      'allowed_bundles' => array(
        'uswds_accordion_item' => 'uswds_accordion_item',
      ),
      'title' => 'Accordion item',
      'title_multiple' => 'Accordion items',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'paragraphs_view',
        'weight' => 4,
        'settings' => array(
          'view_mode' => 'full',
        ),
        'module' => 'paragraphs',
      ),
    ),
    'required' => TRUE,
  ));

  // Install the Anchor paragraph type.
  $bundle = 'uswds_anchor';
  _uswds_paragraphs_create_bundle($bundle, 'Anchor');
  _uswds_paragraphs_add_text_field('field_uswds_anchor', $bundle, array(
    'label' => 'Anchor',
    'required' => TRUE,
  ));
}

/**
 * Helper function to add a boolean field to a bundle.
 */
function _uswds_paragraphs_add_boolean_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(
          '',
          '',
        ),
        'allowed_values_function' => '',
      ),
      'field_name' => $field_name,
      'type' => 'list_boolean',
      'module' => 'list',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }
  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '0',
        'type' => 'options_onoff',
        'module' => 'options',
        'active' => 1,
        'settings' => array(
          'display_label' => 1,
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'weight' => '1',
          'settings' => array(),
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => array(
        array(
          'value' => 0,
        ),
      ),
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a number list field to a bundle.
 */
function _uswds_paragraphs_add_number_list_field($field_name, $bundle, $instance_overrides, $base_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(),
        'allowed_values_function' => '',
      ),
      'field_name' => $field_name,
      'type' => 'list_integer',
      'module' => 'list',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field_info = array_replace_recursive($field_info, $base_overrides);
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '0',
        'type' => 'options_select',
        'module' => 'options',
        'active' => 1,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'weight' => '1',
          'settings' => array(),
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => array(),
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a title field to a bundle.
 */
function _uswds_paragraphs_add_paragraphs_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(),
      'field_name' => $field_name,
      'type' => 'paragraphs',
      'module' => 'paragraphs',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '-1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'paragraphs_embed',
        'module' => 'paragraphs',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'title' => 'Paragraph',
        'title_multiple' => 'Paragraphs',
        'default_edit_mode' => 'closed',
        'add_mode' => 'button',
        'allowed_bundles' => array(),
        'bundle_weights' => array(
          'uswds_text' => '1',
          'uswds_column' => '2',
          'uswds_grid' => '3',
          'uswds_graphic_list' => '4',
          'uswds_hero' => '5',
          'uswds_media_block' => '6',
        ),
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'paragraphs_view',
          'settings' => array(
            'view_mode' => 'full',
          ),
          'module' => 'paragraphs',
          'weight' => 4,
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );

    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a text field to a bundle.
 */
function _uswds_paragraphs_add_text_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'max_length' => '255',
      ),
      'field_name' => $field_name,
      'type' => 'text',
      'module' => 'text',
      'active' => '1',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '1',
        'type' => 'text_textfield',
        'module' => 'text',
        'active' => 1,
        'settings' => array(
          'size' => '60',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
          'module' => 'text',
          'weight' => 0,
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(
          ),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add an image field to a paragraph type.
 */
function _uswds_paragraphs_add_image_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'uri_scheme' => 'public',
        'default_image' => 0,
      ),
      'field_name' => $field_name,
      'type' => 'image',
      'module' => 'image',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace Me',
      'widget' => array(
        'type' => 'image_image',
        'module' => 'image',
        'active' => 1,
        'settings' => array(
          'progress_indicator' => 'throbber',
          'preview_image_style' => 'thumbnail',
        ),
      ),
      'settings' => array(
        'file_directory' => 'uswds-paragraphs',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'alt_field' => 0,
        'title_field' => 0,
        'default_image' => 0,
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(
            'image_style' => 'thumbnail',
            'image_link' => '',
          ),
          'module' => 'image',
          'weight' => 1,
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a long text field to a paragraph type.
 */
function _uswds_paragraphs_add_text_long_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(),
      'field_name' => $field_name,
      'type' => 'text_long',
      'module' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'text_textarea',
        'module' => 'text',
        'active' => 1,
        'settings' => array(
          'rows' => '5',
        ),
      ),
      'settings' => array(
        'text_processing' => '1',
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
          'module' => 'text',
          'weight' => 0,
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}
/**
 * Helper function to add a link field to a paragraph type.
 */
function _uswds_paragraphs_add_link_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'attributes' => array(
          'target' => 'default',
          'class' => '',
          'rel' => '',
        ),
        'url' => 0,
        'title' => 'optional',
        'title_value' => '',
        'title_maxlength' => 128,
        'enable_tokens' => 1,
        'display' => array(
          'url_cutoff' => 80,
        ),
      ),
      'field_name' => $field_name,
      'type' => 'link_field',
      'module' => 'link',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'link_field',
        'module' => 'link',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'absolute_url' => 1,
        'validate_url' => 1,
        'url' => 0,
        'title' => 'required',
        'title_value' => '',
        'title_label_use_field_label' => 0,
        'title_maxlength' => '128',
        'display' => array(
          'url_cutoff' => '80',
        ),
        'attributes' => array(
          'target' => 'default',
          'rel' => '',
          'configurable_class' => 0,
          'class' => '',
          'configurable_title' => 0,
          'title' => '',
        ),
        'rel_remove' => 'default',
        'enable_tokens' => 1,
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'link_default',
          'settings' => array(),
          'module' => 'link',
          'weight' => 2,
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}
