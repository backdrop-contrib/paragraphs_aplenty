<?php

/**
 * @file
 * Install/update code for the Paragraphs Aplenty module.
 */

/**
 * Implements hook_install().
 */
function paragraphs_aplenty_install() {

  // Install the Hero paragraph type.
  $bundle = 'aplenty_hero';
  _paragraphs_aplenty_create_bundle($bundle, 'Hero');
  _paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Hero background image',
    'description' => 'If provided, this image will appear as the background for the hero.',
    'settings' => array(
      'min_dimensions' => '1200x300',
      'max_dimensions' => '3600x600',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => '',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  _paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Hero callout title',
    'description' => 'If provided, this title will appear at the top of the hero callout.',
  ));
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Description',
    'required' => FALSE,
  ));
  _paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Hero callout button',
    'description' => 'If provided, this link will appear at the bottom of the hero callout, as a button.',
  ));

  // Install the Text paragraph type.
  $bundle = 'aplenty_text';
  _paragraphs_aplenty_create_bundle($bundle, 'Text');
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Text',
    'required' => TRUE,
  ));

  // Install the Media Block paragraph type.
  $bundle = 'aplenty_media_block';
  _paragraphs_aplenty_create_bundle($bundle, 'Media block');
  _paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Media block title',
    'required' => TRUE,
  ));
  _paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Media block image',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Media block body',
    'required' => TRUE,
  ));

  // Install the Media List paragraph type.
  $bundle = 'aplenty_media_list';
  _paragraphs_aplenty_create_bundle($bundle, 'Media list');
  _paragraphs_aplenty_add_text_list_field('field_aplenty_media_align', $bundle,
    array(
      'label' => 'Media align',
      'description' => 'Choose whether to align the media image to the left or right for each child media item.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 'aplenty-media-left'),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          'aplenty-media-left' => 'Left',
          'aplenty-media-right' => 'Right',
        ),
      ),
    )
  );
  _paragraphs_aplenty_add_number_list_field('field_aplenty_media_width', $bundle,
    array(
      'label' => 'Column width',
      'description' => 'This sets the number of media blocks per row.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 2),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          1 => '1 block (full width)',
          2 => '2 blocks (½ width)',
        ),
      ),
    )
  );
  _paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Media blocks',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_media_block' => 'aplenty_media_block',
      ),
      'title' => 'Media block',
      'title_multiple' => 'Media blocks',
    ),
    'required' => TRUE,
  ));

  // Install the Card paragraph type.
  $bundle = 'aplenty_card';
  _paragraphs_aplenty_create_bundle($bundle, 'Card');
  _paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Card title',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 2,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(
        ),
        'weight' => 2,
      ),
    ),
  ));
  _paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Card image',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'card',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'card',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Card body',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 3,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'weight' => 3,
      ),
    ),
  ));
  _paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Card button',
    'description' => 'If provided, this link will appear at the bottom of the card, as a button.',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
    ),
  ));

  // Install the Cards paragraph type.
  $bundle = 'aplenty_cards';
  _paragraphs_aplenty_create_bundle($bundle, 'Cards');
  _paragraphs_aplenty_add_number_list_field('field_aplenty_card_width', $bundle,
    array(
      'label' => 'Cards width',
      'description' => 'This sets the width of the cards per row (the number of cards per row).',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 3),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          2 => '½ width (2 cards)',
          3 => '⅓ width (3 cards)',
          4 => '¼ width (4 cards)',
          6 => '⅙ width (6 cards)',
        ),
      ),
    )
  );
  _paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Cards',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_card' => 'aplenty_card',
      ),
      'title' => 'Card',
      'title_multiple' => 'Cards',
    ),
    'required' => TRUE,
  ));

  // Install the Column paragraph type.
  $bundle = 'aplenty_column';
  _paragraphs_aplenty_create_bundle($bundle, 'Column');
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Text',
  ));

  // Install the Column wrapper paragraph type.
  $bundle = 'aplenty_column_wrapper';
  _paragraphs_aplenty_create_bundle($bundle, 'Column Wrapper');
  _paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Column Content',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_heading' => 'aplenty_heading',
        'aplenty_text' => 'aplenty_text',
        'aplenty_accordion' => 'aplenty_accordion',
        'aplenty_image' => 'aplenty_image',
      ),
      'title' => 'Paragraph',
      'title_multiple' => 'Paragraphs',
    ),
    'required' => TRUE,
  ));

  // Install the Grid (aka "Row of columns") paragraph type.
  $bundle = 'aplenty_grid';
  _paragraphs_aplenty_create_bundle($bundle, 'Row of columns');
  _paragraphs_aplenty_add_number_list_field('field_aplenty_column_width', $bundle,
    array(
      'label' => 'Column width',
      'description' => 'This sets the width of the columns in this row, and the number of columns per row.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 3),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          2 => '½ width (2 columns)',
          3 => '⅓ width (3 columns)',
          4 => '¼ width (4 columns)',
          6 => '⅙ width (6 columns)',
        ),
      ),
    )
  );
  _paragraphs_aplenty_add_number_list_field('field_aplenty_column_stretch', $bundle,
    array(
      'label' => 'Column to stretch',
      'description' => 'Choose which column will stretch to fill the remainder. If the number of paragraphs is less than the set number of columns, then the column chosen here will stretch to fill the remainder.',
      'default_value' => array(
        array('value' => 1),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          1 => 'First column',
          2 => 'Second column',
          3 => 'Third column',
          4 => 'Fourth column',
          5 => 'Fifth column',
        ),
      ),
    )
  );
  _paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Columns',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_column' => 'aplenty_column',
        'aplenty_column_wrapper' => 'aplenty_column_wrapper',
      ),
      'title' => 'Column',
      'title_multiple' => 'Columns',
    ),
    'required' => TRUE,
  ));

  // Install the Accordion Item paragraph type.
  $bundle = 'aplenty_accordion_item';
  _paragraphs_aplenty_create_bundle($bundle, 'Accordion Item');
  _paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Accordion item title',
    'required' => TRUE,
  ));
  _paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Accordion item content',
  ));

  // Install the Accordion paragraph type.
  $bundle = 'aplenty_accordion';
  _paragraphs_aplenty_create_bundle($bundle, 'Accordion');
  _paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_bordered', $bundle, array(
    'label' => 'Add border around items',
  ));
  _paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_multi', $bundle, array(
    'label' => 'Allow more than one item to expand at a time',
  ));
  _paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_expand', $bundle, array(
    'label' => 'Start expanded',
  ));
  _paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Accordion Items',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_accordion_item' => 'aplenty_accordion_item',
      ),
      'title' => 'Accordion item',
      'title_multiple' => 'Accordion items',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'paragraphs_view',
        'weight' => 4,
        'settings' => array(
          'view_mode' => 'full',
        ),
        'module' => 'paragraphs',
      ),
    ),
    'required' => TRUE,
  ));

  // Install the Heading paragraph type.
  $bundle = 'aplenty_heading';
  _paragraphs_aplenty_create_bundle($bundle, 'Heading');
  _paragraphs_aplenty_add_text_field('field_aplenty_heading', $bundle, array(
    'label' => 'Heading',
    'required' => FALSE,
  ));
  _paragraphs_aplenty_add_text_field('field_aplenty_anchor', $bundle, array(
    'label' => 'Anchor',
    'required' => FALSE,
    'description' => 'Provide a string with no spaces. If provided, the anchor can be a destination for a relative link that begins with a hash. For example, a link like <code>#bicycle</code> would link to an anchor <code>bicycle</code>.'
  ));

  // Install the Image paragraph type.
  $bundle = 'aplenty_image';
  _paragraphs_aplenty_create_bundle($bundle, 'Image');
  _paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Image',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'large',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  _paragraphs_aplenty_add_text_field('field_aplenty_caption', $bundle, array(
    'label' => 'Caption',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 2,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(
        ),
        'weight' => 2,
      ),
    ),
  ));
  _paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Link caption',
    'description' => 'If provided, this link will appear as part of the caption.',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
    ),
  ));
}

/**
 * Helper function to create a paragraphs bundle (type).
 *
 * @param string $machine
 *   The machine name for the bundle.
 * @param string $human
 *   The human label for the bundle.
 */
function _paragraphs_aplenty_create_bundle($machine, $human) {
  $existing = paragraphs_bundle_load($machine);
  if ($existing) {
    return;
  }

  $bundle = new stdClass();
  $bundle->name = $human;
  $bundle->label = $human;
  $bundle->description = '';
  $bundle->bundle = $machine;
  $bundle->allow_unpublish = 1;
  $bundle->locked = 0;
  $bundle->allow_unpublish = 1;
  paragraphs_bundle_save($bundle);
}

/**
 * Helper function to add a boolean field to a bundle.
 */
function _paragraphs_aplenty_add_boolean_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(
          '',
          '',
        ),
        'allowed_values_function' => '',
      ),
      'field_name' => $field_name,
      'type' => 'list_boolean',
      'module' => 'list',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }
  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '0',
        'type' => 'options_onoff',
        'module' => 'options',
        'active' => 1,
        'settings' => array(
          'display_label' => 1,
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'weight' => '1',
          'settings' => array(),
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => array(
        array(
          'value' => 0,
        ),
      ),
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a number list field to a bundle.
 */
function _paragraphs_aplenty_add_number_list_field($field_name, $bundle, $instance_overrides, $base_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(),
        'allowed_values_function' => '',
      ),
      'field_name' => $field_name,
      'type' => 'list_integer',
      'module' => 'list',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field_info = array_replace_recursive($field_info, $base_overrides);
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '0',
        'type' => 'options_select',
        'module' => 'options',
        'active' => 1,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'weight' => '1',
          'settings' => array(),
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => array(),
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a text list field to a bundle.
 */
function _paragraphs_aplenty_add_text_list_field($field_name, $bundle, $instance_overrides, $base_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(),
        'allowed_values_function' => '',
      ),
      'field_name' => $field_name,
      'type' => 'list_text',
      'module' => 'list',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field_info = array_replace_recursive($field_info, $base_overrides);
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '0',
        'type' => 'options_select',
        'module' => 'options',
        'active' => 1,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'weight' => '1',
          'settings' => array(),
        ),
        'paragraphs_editor_preview' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => array(),
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a paragraphs field to a bundle.
 */
function _paragraphs_aplenty_add_paragraphs_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(),
      'field_name' => $field_name,
      'type' => 'paragraphs',
      'module' => 'paragraphs',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '-1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'paragraphs_embed',
        'module' => 'paragraphs',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'title' => 'Paragraph',
        'title_multiple' => 'Paragraphs',
        'default_edit_mode' => 'preview',
        'add_mode' => 'button',
        'allowed_bundles' => array(),
        'bundle_weights' => array(
          'aplenty_text' => '1',
          'aplenty_grid' => '2',
          'aplenty_media_list' => '3',
          'aplenty_hero' => '4',
          'aplenty_cards' => '5',
        ),
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'paragraphs_view',
          'settings' => array(
            'view_mode' => 'full',
          ),
          'module' => 'paragraphs',
          'weight' => 4,
        ),
        'paragraphs_editor_preview' => array(
          'label' => 'hidden',
          'type' => 'paragraphs_view',
          'settings' => array(
            'view_mode' => 'full',
          ),
          'module' => 'paragraphs',
          'weight' => 4,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );

    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a text field to a bundle.
 */
function _paragraphs_aplenty_add_text_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'max_length' => '255',
      ),
      'field_name' => $field_name,
      'type' => 'text',
      'module' => 'text',
      'active' => '1',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'weight' => '1',
        'type' => 'text_textfield',
        'module' => 'text',
        'active' => 1,
        'settings' => array(
          'size' => '60',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
          'module' => 'text',
          'weight' => 0,
        ),
        'paragraphs_editor_preview' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(
          ),
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add an image field to a paragraph type.
 */
function _paragraphs_aplenty_add_image_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'uri_scheme' => 'public',
        'default_image' => 0,
      ),
      'field_name' => $field_name,
      'type' => 'image',
      'module' => 'image',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace Me',
      'widget' => array(
        'type' => 'image_image',
        'module' => 'image',
        'active' => 1,
        'settings' => array(
          'progress_indicator' => 'throbber',
          'preview_image_style' => 'thumbnail',
        ),
      ),
      'settings' => array(
        'file_directory' => 'aplenty-paragraphs',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'alt_field' => 1,
        'title_field' => 0,
        'default_image' => 0,
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(
            'image_style' => 'thumbnail',
            'image_link' => '',
          ),
          'module' => 'image',
          'weight' => 1,
        ),
        'paragraphs_editor_preview' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(
            'image_style' => 'thumbnail',
            'image_link' => '',
          ),
          'module' => 'image',
          'weight' => 1,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}

/**
 * Helper function to add a long text field to a paragraph type.
 */
function _paragraphs_aplenty_add_text_long_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(),
      'field_name' => $field_name,
      'type' => 'text_long',
      'module' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'text_textarea',
        'module' => 'text',
        'active' => 1,
        'settings' => array(
          'rows' => '5',
        ),
      ),
      'settings' => array(
        'text_processing' => '1',
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
          'module' => 'text',
          'weight' => 0,
        ),
        'paragraphs_editor_preview' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
          'module' => 'text',
          'weight' => 0,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}
/**
 * Helper function to add a link field to a paragraph type.
 */
function _paragraphs_aplenty_add_link_field($field_name, $bundle, $instance_overrides) {

  $entity_type = 'paragraphs_item';

  $existing = field_info_field($field_name);
  if (empty($existing)) {
    $field_info = array(
      'translatable' => '0',
      'entity_types' => array(),
      'settings' => array(
        'attributes' => array(
          'target' => 'default',
          'class' => '',
          'rel' => '',
        ),
        'url' => 0,
        'title' => 'optional',
        'title_value' => '',
        'title_maxlength' => 128,
        'enable_tokens' => 1,
        'display' => array(
          'url_cutoff' => 80,
        ),
      ),
      'field_name' => $field_name,
      'type' => 'link_field',
      'module' => 'link',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    $field = field_create_field($field_info);
  }

  $existing = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($existing)) {
    $field_info = array(
      'label' => 'Replace me',
      'widget' => array(
        'type' => 'link_field',
        'module' => 'link',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'absolute_url' => 1,
        'validate_url' => 1,
        'url' => 0,
        'title' => 'required',
        'title_value' => '',
        'title_label_use_field_label' => 0,
        'title_maxlength' => '128',
        'display' => array(
          'url_cutoff' => '80',
        ),
        'attributes' => array(
          'target' => 'default',
          'rel' => '',
          'configurable_class' => 0,
          'class' => '',
          'configurable_title' => 0,
          'title' => '',
        ),
        'rel_remove' => 'default',
        'enable_tokens' => 1,
        'user_register_form' => false,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'link_default',
          'settings' => array(),
          'module' => 'link',
          'weight' => 2,
        ),
        'paragraphs_editor_preview' => array(
          'label' => 'hidden',
          'type' => 'link_default',
          'settings' => array(),
          'module' => 'link',
          'weight' => 2,
        ),
      ),
      'required' => FALSE,
      'description' => '',
      'default_value' => NULL,
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
    );
    $field_info = array_replace_recursive($field_info, $instance_overrides);
    field_create_instance($field_info);
  }
}
